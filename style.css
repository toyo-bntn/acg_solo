:root{
  --bg:#fafafa; --panel:#edf0f7; --panel2:#f6f6f6; --border:#a3a3a3;
  --text:#18202a; --muted:#1d2632; --accent:#db4848; --danger:#cc0000; --ok:#2fa572;

  /* 左カラム幅/中央最小幅/右カラム幅（必要ならここで調整） */
  --col-left: 260px;
  --col-center-min: 440px;
  --col-right: 260px;

  /* 左ペイン3行の高さ（上:FREE / 中:プレビュー / 下:ログ）*/
  --left-free-row: auto;
  --left-preview-row: 450px;  /* ←お好みで 420〜520 あたり */
  --left-log-row: 150px;
  --preview-big-height: 100px; /* プレビュー画像の高さ据え置き */

  /* main（中央4行）の高さを変数化 */
  --row-battle: minmax(160px, 160px);
  --row-hand: 170px;
  --row-decks: 180px;     /* 基礎デッキ / 領土デッキ */
  --row-territory: 210px; /* 領地 */
  /* 横幅（同じ行内で T_DECK : T_FIELD の比率） */
  --t-deck-width: 40%;         /* ← 領土デッキを細くしたいなら30〜40% */
  --card-w: 80px;                         /* ← ここを 84px, 80px などに */
  --card-h: calc(var(--card-w) * 1.4348); /* 92:132 の比率 ≒ 1.4348 */
  --card-radius: 8px;
  --card-border: 0px solid transparent;
  --card-shadow: none;
  --side-panel-width: 720px;
}

  *{box-sizing:border-box}
  html,body{height:100%}
  body{
    margin:0;
    background:var(--bg);
    color:var(--text);
    font-family:ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Noto Sans,"Helvetica Neue",Arial
  }
.wrap{
  display:grid;
  grid-template-columns: var(--col-left) minmax(var(--col-center-min), 1fr) var(--col-right);
  grid-template-rows:auto 1fr auto;
  gap:2px; height:100%;
}
  header,footer{
    grid-column:1 / span 3;
    background:var(--panel);
    padding:2px 2px;
    display:flex;align-items:center;
    justify-content:space-between;
    gap:2px}
  header .left{display:flex;align-items:center;gap:4px;flex-wrap:wrap}
  header .right{display:flex;gap:2px;flex-wrap:wrap}
  #deckCountChip, #tDeckCountChip { display: none !important; }
  .pill{border:1px solid var(--border);background:var(--panel2);border-radius:999px;padding:2px 2px;font-size:14px}
  .pill.bad{border-color:var(--danger);color:#d60000; padding:0 0 0 8px}
  .chip{border:1px solid var(--border);background:var(--panel2);border-radius:999px;padding:3px 8px 3px 3px;font-size:14px;color:var(--muted)}
  .btn{background:var(--panel2);border:1px solid var(--border);color:var(--text);border-radius:2px;padding:2px 6px;cursor:pointer; font-size:16px}
  .btn:hover{border-color:var(--accent)}
  .btn.sm{padding:1px 6px;font-size:14px;border-radius:6px}
  .btn.warn{border-color:var(--danger);color:#d00000}
  .hidden{display:none !important}
  .hint.bad{ color: var(--danger, #c33); }
/* 左ペインの行配分 */
.leftpane{
  grid-column:1 / span 1; padding:4px;
  display:grid !important;
/*   grid-template-rows: minmax(132px, var(--left-free-row, auto)) var(--left-preview-row, 440px) var(--left-log-row, 200px);
*/
  grid-template-rows: minmax(132px, var(--left-free-row, auto)) var(--left-preview-row, 200px) var(--left-log-row, 200px);
  gap:4px;
}
  /* ===== 3 ゾーンの高さをグリッド行に任せる ===== */
  #zone-preview .preview{
    display: grid;
    grid-template-rows: 0.5fr 1fr;
    height: 100%;
  }
  /* 画像枠の“固定350px”をやめ、グリッドの行高に従わせる */
#zone-preview .big{
  flex: auto;
  height: 100%;
  min-height: 0;        /* 折返し時のはみ出し防止 */
  overflow: auto; /* ← スクロールできる窓に */
  -webkit-overflow-scrolling: touch;
}
#zone-preview .big img{
  width: 80%;
  height: auto;           
  display: block;
  background:var(--panel);
  padding: 2px 2px 2px 40px;
}
/* 情報欄もはみ出し防止＆スクロール */
#zone-preview .info{
  min-height: 0;
  height: auto;
  overflow: auto;
}
/* プレビュー情報の見出し */
#zone-preview .info .stats{ margin:2px 0; font-size:14px; }
#zone-preview .info .sep{ height:1px; background:var(--panel2); margin:3px 0; opacity:.8 }
#zone-preview .info .abilityList{ margin:4px 0 0 0; padding-left:18px; font-size:16px }

/* ★ スクロールバーを非表示（縦横とも隠す）*/
#logBox,
#zone-preview,
#zone-preview .big,
#zone-preview .info{
  scrollbar-width: none;        /* Firefox */
  -ms-overflow-style: none;     /* IE/Edge レガシー */
}

#zone-preview .big::-webkit-scrollbar,
#zone-preview .info::-webkit-scrollbar{
  display: none;                /* WebKit */
}
#infoText{ white-space: pre-wrap; line-height: 1.5; }

  #zone-log{
    position:static !important;   /* ← absolute 指定を無効化 */
    width:100% !important;
    height:auto !important;
    margin:0 !important;
  }
  main{
    grid-column:2 / span 1;
    padding:4px; display:grid; 
    grid-template-rows: var(--row-battle) var(--row-hand) var(--row-decks) var(--row-territory); 
    gap:2px;
  }
  .row.content {
    display: flex;
    gap: 2px;
  }
  .zone[data-zone="T_FIELD"] {
    flex: 1;
    max-width: 100%;
  }
  .zone[data-zone="T_DECK"] {
    width: var(--t-deck-width);
  }
  .zone[data-zone="DECK"] .card,
  .zone[data-zone="T_DECK"] .card,
  .zone[data-zone="SIDEDECK"] .card { 
    width:var(--card-w) !important; height:var(--card-h) !important; 
  }
  aside{grid-column:3 / span 1; padding:4px; display:grid; grid-template-rows: 1fr 1fr; gap:4px;}
  .zone{background:var(--panel2); border:1px solid var(--border); border-radius:5px; padding:4px; display:flex; flex-direction:column; gap:2px; min-height:100px; overflow-x: auto;}
  .zone h3{margin:0; font-size:14px; color:var(--muted); display:flex; align-items:center; gap:2px; justify-content:space-between; padding: 0 0 0 6px }
  .toolbar{display:flex; gap:4px; align-items:center; flex-wrap:wrap}
  .content{flex:1; overflow:auto; padding:4px; border-radius:8px; border:1px dashed var(--border);}
  .row{display:flex; gap:4px}
  .gridBattle{display:grid; grid-template-columns: repeat(auto-fill, 96px); grid-auto-rows: 132px; gap:4px; align-content:flex-start;height:100%}
  .hrow{
    display:flex;
    flex-wrap: nowrap;       /* 横一列に並べる */
    align-items: flex-start;  
    gap:2px; 
    overflow-x:auto; 
    overflow-y: hidden;
    padding-bottom:4px
  }
/* ★ 領地の重ね（20%） */
#territory.hrow{ gap:0; } /* このゾーンだけ gap を 0 に */
#territory .card{
  margin-left: calc(var(--card-w) * -0.2);
}
#territory .card:first-child{
  margin-left: 0;
} 
  .vstack{display:flex; flex-direction:column; gap:6px; overflow:auto}
  .card{
    width: var(--card-w); 
    height: var(--card-h);  
    border-radius:10px; 
    border: none !important;
    box-shadow: none !important;
    background:transparent !important;
    outline: none !important;
    position:relative; 
    user-select:none; 
    overflow:hidden; 
    flex-shrink:0
  }
  .imgWrap{position:absolute; inset:0; background: transparent; overflow: hidden; border-radius: var(--card-radius);}
  .card img{width:100%; height:100%; object-fit:cover; display:block}
  .card .rotWrap{
  position:absolute; inset:0;
  transform: rotate(var(--rot, 0deg));
  transform-origin: center;
  }
  /* 新: アクセントは画像の矩形にだけ出す */
 .imgWrap.selected::after{
   content:"";
   position:absolute; inset:0;
   border:3px solid var(--accent);          /* 赤 */
   border-radius:8px;                 /* 画像角丸に合わせるなら */
   pointer-events:none;
 }
  .card .nameBar{
    position:absolute;
    left:50%; top:80%;
    transform-origin:center;
    transform: translate(-50%,-50%) rotate(var(--rot, 0deg));
  /* 見た目はお好みで */
    background: linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.75) 50%);
    padding:1px 1px; font-size:12px; font-weight:700;
    border-radius:6px;
    width: 80%;
    text-align:center; 
  }
  .card.selected{outline:none !important; outline-offset:0px;box-shadow: none !important;}
  .card.face-down{background: repeating-linear-gradient(45deg, #101724, #101724 10px, #0c1320 10px, #0c1320 20px); border-style:dashed}
  .badge{position:absolute; top:4px; right:4px; background:var(--panel2); border:1px solid #2e7dd7; border-radius:8px; padding:4px 6px; font-size:11px; color:#a7b6c5}
  .ctrBadges{position:absolute; left:50%; transform:translate(-50%, -50%); top:40%; display:flex; gap:2px; white-space:nowrap}
  .ctr{display: inline-flex; align-items: center;justify-content: center ;font-size:13px; font-weight:Bold ;padding:4px 6px; background:var(--panel2); border:1px solid var(--border); border-radius:999px; cursor:pointer; box-shadow:0 0 0 1px rgba(255,255,255,.05) inset}
  .ctr.plus1{background:#000; color:#fff; text-shadow:0 0 3px #fff;font-weight:Bold; }
  .ctrMenu{position:absolute; top:22px; left:50%; transform:translateX(-50%); background:var(--panel2); border:1px solid var(--border); border-radius:8px; padding:4px; display:flex; gap:4px; z-index:5}
  .ctrMenu .btn{padding:4px 3px; font-size: 10px;}
  .preview{display:flex; flex-direction:column; gap:4px; height:auto}
/* プレビュー画像枠の高さ */
  .big{ flex:0 0 var(--preview-big-height); /* 350pxだった箇所 */ }
  .big img{width:100%; height:100%; object-fit:contain; background:var(--panel2);}
  .info{flex:1; overflow:auto; border:1px solid var(--border); border-radius:8px; padding:4px; font-size:14px; background:var(--panel2);}
  .info h4{margin:0 0 6px 0}
  .info .kv{display:flex; gap:4px; flex-wrap:wrap; color:#002040}
  .kv .tag{border:1px solid var(--border); border-radius:999px; padding:3px 3px; font-size:13px; background:var(--panel2);}
  .log{height:100%; overflow:auto; font-family:ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; font-size:12px; background:var(--panel2); border:1px solid var(--border); border-radius:8px; padding:6px}
  .counterPalette{display:grid; grid-template-columns: repeat(2, 1fr); gap:4px; flex-wrap:wrap}
  .paletteItem{border:1px solid var(--border); border-radius:999px; padding:4px 5px; background:var(--panel2); cursor:grab;display:inline-flex;
  align-items:center;
  justify-content:center;
  text-align:center;}
  .overlay{position:fixed; inset:0; background:rgba(6,8,11,.92); display:flex; align-items:center; justify-content:center; z-index:1000}
  .panel{width:min(800px, calc(100% - 24px)); background:var(--panel2); border:1px solid var(--border); border-radius:12px; padding:10px; display:flex; flex-direction:column; gap:12px; margin: 2px}
  .hint{font-size:16px; color:var(--muted)}
  .rows{display:grid; gap:4px}
  .twoCol{display:grid; grid-template-columns:1fr auto; gap:4px; align-items:center}
  .danger{color:#ffb1b1}
  .zone[data-zone="DECK"] .content, .zone[data-zone="T_DECK"] .content{padding:2px}
  .small{transform:scale(.92); transform-origin:top left}
  .zone .hrow .card{cursor:grab}
  .zone .vstack .card{cursor:grab}
  .deckStrip, .tdeckStrip{
    display:flex;
    overflow-x:auto;
    gap:0;
    padding:4px;
  }
/* HAND のカードを重ねて表示（左重なり） */
.handStrip.hrow { gap: 0; }                 /* gap があると重なりに効くので 0 に */
.handStrip .card { margin-left: -3%; }     /* ご要望通り */
.handStrip .card:first-child { margin-left: 0; }
  /* （任意）重なり時の見た目向上：選択 or ホバーを前面に */
.handStrip .card { position: relative; }
.handStrip .card:hover { z-index: 5; }
/* :has は対応ブラウザなら便利（選択中カードを前面に） */
@supports(selector(:has(.x))){
  .handStrip .card:has(.imgWrap.selected){ z-index: 10; }
}
  .deckStrip .card{
    margin-left:-3%;
}
  .tdeckStrip .card{
    margin-left:-10%;
}
/* --- 前面制御の共通設定（HAND / DECK / T_DECK） --- */
.handStrip .card,
.deckStrip .card,
.tdeckStrip .card{
  position: relative;   /* z-index を効かせるため */
}

.handStrip .card:hover,
.deckStrip .card:hover,
.tdeckStrip .card:hover{
  z-index: 5;           /* ホバー中は前面 */
}

/* 選択中（画像に枠）も前面に：:has 対応ブラウザで */
@supports(selector(:has(.x))){
  .handStrip .card:has(.imgWrap.selected),
  .deckStrip .card:has(.imgWrap.selected),
  .tdeckStrip .card:has(.imgWrap.selected){
    z-index: 10;
  }
}

/* （任意）キーボード操作でも前面にしたい場合 */
.handStrip .card:focus-within,
.deckStrip .card:focus-within,
.tdeckStrip .card:focus-within{
  z-index: 6;
}
/* 先頭だけ基準位置 */
  .deckStrip .card:first-child,
  .tdeckStrip .card:first-child{
    margin-left:0;
}
/* ---------------------------
   縦5枚ずつ → 右に列を追加（墓地/除外/フリー）
   ※JSが .pileCols を付け、カードは絶対配置で置く
----------------------------*/
.pileCols{
  position: relative;
  display: block;
  overflow: auto;       /* FREEは“欄を拡大”したいので縦スクロールにしない */
  min-height: var(--card-h)!important;   /* カード1枚ぶん */
}
.pileCols .card{
  position: absolute;      /* JSでleft/top/z-indexを与える */
}
.replayPanel{
  position:fixed; width:250px;
  background:var(--panel); border:1px solid var(--border); border-radius:12px;
  padding:5px; z-index:9999; box-shadow:0 12px 30px rgba(0,0,0,.35);
}
.replayPanel.hidden{ display:none }
.replayPanel .row{ display:flex; gap:6px; flex-wrap:wrap; }
#replaySeek{ width:100% }
/* 録画中（ボタン）を赤く・軽く点滅 */
#btnRecord.recording{
  background:#b91c1c;
  border-color:#ef4444;
  color:#fff;
  animation: recPulse 1.4s infinite;
}
@keyframes recPulse{
  0%{ box-shadow:0 0 0 0 rgba(239,68,68,.85) }
  70%{ box-shadow:0 0 0 10px rgba(239,68,68,0) }
  100%{ box-shadow:0 0 0 0 rgba(239,68,68,0) }
}
.replaySeekWrap{ position:relative; padding:4px 10px }
.replaySeekWrap .dot{ position:absolute; left:2px; top:-2px; font-size:12px; opacity:.85 }
#replaySeek{ width:100% }

.rate.active{ background: var(--accent); color:#fff; border-color: var(--accent); }
.controls{ display:flex; gap:6px; justify-content:center }
#btnDraw1{ display:none !important; }
#zone-preview{
  overflow: hidden;     /* ← 全体スクロール禁止 */
}
/* 墓地・除外の枠（コンテナ）を自動伸縮に */
.zone[data-zone="GRAVE"] .content,
.zone[data-zone="BANISH"] .content{
  height:auto ;
  max-height:none;
  overflow:auto;
}
/* 列コンテナの最小高さ＝カード1枚ぶん（カードサイズ変数に追従） */

/* Start ボタンを他より大きく */
.btn.btn-lg{ padding:10px 18px; font-size:18px; border-radius:10px; border-width:2px; }
.btn.primary{ background:#fff; border-color:var(--accent); }
.btn.primary:hover{ background:#fff; border-color:#ffffff; }

.dangerText{ color: var(--danger); font-weight: 700; }

/* サイドデッキの小窓（非モーダル） */
.sidePanel{
  left:260px;               /* 右ではなく左に出す */
  right:auto;
  width: var(--side-panel-width);
  z-index: 9998;           /* リプレイ小窓より少し下でもOK */
}

/* DECKと同じ“重なり”にするため、hrow の gap を0に上書き */
.deckStrip.hrow { gap: 0}  
#sideDeck .card{
  margin-left: calc(var(--card-w) * -0.3);
}
#sideDeck .card:first-child{
  margin-left: 0;
} 
/* サイドデッキ欄の余白微調整（任意） */
#sidePanel .zone .content { padding: 2px; }

#sideDeckTitle {
  display: flex;
  align-items: baseline; /* テキストのベースラインを揃える */
  gap: 10px; /* 要素間の隙間 */
  justify-content:flex-start !important;
}

#btnSideClose[disabled], #btnSide[disabled] {
  opacity: 0.5; /* 透明度を下げて無効状態を表現 */
  cursor: not-allowed; /* マウスポインタを禁止アイコンにする */
}
#resetSideDeck {
  background-color:var(--accent);
  color :var(--bg);
}

/* === Replay Ghost Animation (ghost move across zones) === */
.ghostCard{
position: fixed; /* viewport 基準で矩形合わせが簡単 */
left: 0; top: 0;
width: var(--card-w);
height: var(--card-h);
pointer-events: none;
z-index: 10000;
will-change: transform, opacity;
transition: transform 380ms ease, opacity 120ms ease-in;
}
.ghostCard img{
width: 100%; height: 100%; display: block; object-fit: cover;
border-radius: 10px;
}
/* ゴースト移動中、目的地の実体カードは一時的に不可視にする */
.card.ghost-hidden{ opacity: 0; }